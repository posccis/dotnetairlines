// <auto-generated />
using System;
using FlightBooking.Lib.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FlightBooking.Lib.Migrations
{
    [DbContext(typeof(FlightBookingContext))]
    partial class FlightBookingContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FlightBookingLib.Models.Aviao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ano")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("QuantidadeAssentos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Avioes");
                });

            modelBuilder.Entity("FlightBookingLib.Models.CartaoDeCredito", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Bandeira")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodSeguranca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdTripulante")
                        .HasColumnType("int");

                    b.Property<string>("NomeTitular")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PassageiroId")
                        .HasColumnType("int");

                    b.Property<string>("Vencimento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PassageiroId");

                    b.ToTable("CartoesDeCredito");
                });

            modelBuilder.Entity("FlightBookingLib.Models.Copiloto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataDeNascimeto")
                        .HasColumnType("datetime2");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TempoDeVoo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Copilotos");
                });

            modelBuilder.Entity("FlightBookingLib.Models.Passageiro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DataNascimento")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("NecessidadesEspeciais")
                        .HasColumnType("bit");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Passaporte")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RG")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Passageiros");
                });

            modelBuilder.Entity("FlightBookingLib.Models.Piloto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataDeNascimeto")
                        .HasColumnType("datetime2");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TempoDeVoo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Pilotos");
                });

            modelBuilder.Entity("FlightBookingLib.Models.Tripulante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DataDeNascimeto")
                        .HasColumnType("datetime2");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Funcao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TempoDeVoo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tripulantes");
                });

            modelBuilder.Entity("FlightBookingLib.Models.Voo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AviaoId")
                        .HasColumnType("int");

                    b.Property<int>("CopilotoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime2");

                    b.Property<string>("Destino")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Duracao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Horario")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Internacional")
                        .HasColumnType("bit");

                    b.Property<string>("Origem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PassageiroId")
                        .HasColumnType("int");

                    b.Property<int>("PilotoId")
                        .HasColumnType("int");

                    b.Property<int>("QuantAssentosClasseEconomica")
                        .HasColumnType("int");

                    b.Property<int>("QuantAssentosPrimeiraClasse")
                        .HasColumnType("int");

                    b.Property<int?>("TripulanteId")
                        .HasColumnType("int");

                    b.Property<float>("ValorClasseEconomica")
                        .HasColumnType("real");

                    b.Property<float>("ValorPrimeiraClasse")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("AviaoId");

                    b.HasIndex("CopilotoId");

                    b.HasIndex("PassageiroId");

                    b.HasIndex("PilotoId");

                    b.HasIndex("TripulanteId");

                    b.ToTable("Voos");
                });

            modelBuilder.Entity("FlightBookingLib.Models.CartaoDeCredito", b =>
                {
                    b.HasOne("FlightBookingLib.Models.Passageiro", null)
                        .WithMany("Cartoes")
                        .HasForeignKey("PassageiroId");
                });

            modelBuilder.Entity("FlightBookingLib.Models.Voo", b =>
                {
                    b.HasOne("FlightBookingLib.Models.Aviao", "Aviao")
                        .WithMany("Voos")
                        .HasForeignKey("AviaoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlightBookingLib.Models.Copiloto", "Copiloto")
                        .WithMany("Voos")
                        .HasForeignKey("CopilotoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlightBookingLib.Models.Passageiro", null)
                        .WithMany("Voos")
                        .HasForeignKey("PassageiroId");

                    b.HasOne("FlightBookingLib.Models.Piloto", "Piloto")
                        .WithMany("Voos")
                        .HasForeignKey("PilotoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FlightBookingLib.Models.Tripulante", null)
                        .WithMany("Voos")
                        .HasForeignKey("TripulanteId");

                    b.Navigation("Aviao");

                    b.Navigation("Copiloto");

                    b.Navigation("Piloto");
                });

            modelBuilder.Entity("FlightBookingLib.Models.Aviao", b =>
                {
                    b.Navigation("Voos");
                });

            modelBuilder.Entity("FlightBookingLib.Models.Copiloto", b =>
                {
                    b.Navigation("Voos");
                });

            modelBuilder.Entity("FlightBookingLib.Models.Passageiro", b =>
                {
                    b.Navigation("Cartoes");

                    b.Navigation("Voos");
                });

            modelBuilder.Entity("FlightBookingLib.Models.Piloto", b =>
                {
                    b.Navigation("Voos");
                });

            modelBuilder.Entity("FlightBookingLib.Models.Tripulante", b =>
                {
                    b.Navigation("Voos");
                });
#pragma warning restore 612, 618
        }
    }
}
